
Mac上面的command + shift等于window上面的ctr+shift

ECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准。因为当前版本的ES6是在2015年发布的，所以又称ECMAScript 2015。也就是说，ES6就是ES2015。

首先你需要了解ES2015 （也叫作ES6）――这是一套对JavaScript的语法改进的官方标准


Babel是一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行

1.在运行React的时候不能有空格  react-native run-android  没空格

2.如果仅仅只是修改js页面，那么就没有必要重新打包运行，只需要用手机摇一摇有一个重新装载的选项，就可以进行直接重新装载。

3.AppRegistry.registerComponent('AwesomeProject', () => HelloWorldApp);
  'AwesomeProject'这个是必须和我们工程名字一致的，() => HelloWorldApp这个后面是绑定的组件class HelloWorldApp extends Component  
 
4.
  class Greeting extends Component {
  render() {
    return (
      <Text>Hello {this.props.name}!</Text>
    );
  }
}

class LotsOfGreetings extends Component {
  render() {
    return (
      <View style={{alignItems: 'center'}}>
        <Greeting name='Rexxar' />
        <Greeting name='Jaina' />
        <Greeting name='Valeera' />
      </View>
    );
  }
}

Greeting就相当于自定义组件。


5.
 <View style={{flex:1,flexDirection:'row'}}>
  
     
 <View style={{flex: 1 width: 50, height: 50, backgroundColor: 'powderblue'}} />
        
 <View style={{flex: 1 width: 100, height: 100, backgroundColor: 'skyblue'}} />
        
 <View style={{flex: 1 width: 150, height: 150, backgroundColor: 'steelblue'}} />
 
    
 </View>
因为已经设置了大小，所以就不能再去设置flex：1

应该这些写：

 <View style={{flex: 1}}>
        <View style={{flex: 1, backgroundColor: 'powderblue'}} />
        <View style={{flex: 2, backgroundColor: 'skyblue'}} />
        <View style={{flex: 3, backgroundColor: 'steelblue'}} />
 </View>

6.
控制一个组件，一般有两种数据类型，一种是props，一种是state。props是在父组件中设置，一旦指定，它的生命周期是不可以改变的。对于组件中数据的变化，
我们是通过state来控制的。


class UselessTextInput extends Component {
  constructor(props) {
    super(props);
    this.state = { text: 'Useless Placeholder' };
  }

  render() {
    return (
      <TextInput
        style={{height: 40, borderColor: 'gray', borderWidth: 1}}
        onChangeText={(text) => this.setState({text})}
        value={this.state.text}
      />
    );
  }
}

export default class Zbhrt extends Component {
  render() {
    return (
      <View style={styles.container}>
        <View >
          <Text style={styles.welcome}>
          个人中心
          </Text>

         <Image style={styles.icon}source={require('./image/my.jpg')}/>

        </View>

         <UselessTextInput />

      </View>
    );
  }
}

这个自定义组件TextInput可以正常显示，但是当自己这样写就不能正常显示了，就报错：

export default class Zbhrt extends Component {
  render() {
    return (
      <View style={styles.container}>
        <View >
          <Text style={styles.welcome}>
          个人中心
          </Text>

         <Image style={styles.icon}source={require('./image/my.jpg')}/>

        </View>

         <UselessTextInput />

      </View>
    );
  }
}


class UselessTextInput extends Component {
  constructor(props) {
    super(props);
    this.state = { text: 'Useless Placeholder' };
  }

  render() {
    return (
      <TextInput
        style={{height: 40, borderColor: 'gray', borderWidth: 1}}
        onChangeText={(text) => this.setState({text})}
        value={this.state.text}
      />
    );
  }
}



7.
   fetch('http://ip.taobao.com/service/getIpInfo.php?ip=63.223.108.42', {
method: 'GET'
}) .then((response) => response.json())
      .then((responseText) => {
        // dataSource: this.state.dataSource.cloneWithRows(responseText.results),

        alert(responseText.data.country);
      })
      .catch((error) => {
        console.error(error);
      });
}

返回的数据：{"code":0,"data":{"country":"\u7f8e\u56fd","country_id":"US","area":"","area_id":"","region":"","region_id":"","city":"","city_id":"","county":"","county_id":"","isp":"","isp_id":"","ip":"63.223.108.42"}}
这个和java不一样，直接点属性值就可以拿到我去。

8.之前自己无法运行报错 
could not connect to development server   是因为需要设置Dev Settings  --> Debugging 设置成自己的IP  
React―Native开发之 Could not connect to development server（Android）解决方法   http://blog.csdn.net/qq_25827845/article/details/52974991

