

已经打包成功，然后说不能连接设备，这个时候就需要看一下 Dev Settings进行IP设置了。



Mac上面的command + shift等于window上面的ctr+shift

ECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准。因为当前版本的ES6是在2015年发布的，所以又称ECMAScript 2015。也就是说，ES6就是ES2015。

首先你需要了解ES2015 （也叫作ES6）――这是一套对JavaScript的语法改进的官方标准


Babel是一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行

1.在运行React的时候不能有空格  react-native run-android  没空格

2.如果仅仅只是修改js页面，那么就没有必要重新打包运行，只需要用手机摇一摇有一个重新装载的选项，就可以进行直接重新装载。

3.AppRegistry.registerComponent('AwesomeProject', () => HelloWorldApp);
  'AwesomeProject'这个是必须和我们工程名字一致的，() => HelloWorldApp这个后面是绑定的组件class HelloWorldApp extends Component  
 
4.
  class Greeting extends Component {
  render() {
    return (
      <Text>Hello {this.props.name}!</Text>
    );
  }
}

class LotsOfGreetings extends Component {
  render() {
    return (
      <View style={{alignItems: 'center'}}>
        <Greeting name='Rexxar' />
        <Greeting name='Jaina' />
        <Greeting name='Valeera' />
      </View>
    );
  }
}

Greeting就相当于自定义组件。


5.
 <View style={{flex:1,flexDirection:'row'}}>
  
     
 <View style={{flex: 1 width: 50, height: 50, backgroundColor: 'powderblue'}} />
        
 <View style={{flex: 1 width: 100, height: 100, backgroundColor: 'skyblue'}} />
        
 <View style={{flex: 1 width: 150, height: 150, backgroundColor: 'steelblue'}} />
 
    
 </View>
因为已经设置了大小，所以就不能再去设置flex：1

应该这些写：

 <View style={{flex: 1}}>
        <View style={{flex: 1, backgroundColor: 'powderblue'}} />
        <View style={{flex: 2, backgroundColor: 'skyblue'}} />
        <View style={{flex: 3, backgroundColor: 'steelblue'}} />
 </View>

6.
控制一个组件，一般有两种数据类型，一种是props，一种是state。props是在父组件中设置，一旦指定，它的生命周期是不可以改变的。对于组件中数据的变化，
我们是通过state来控制的。


class UselessTextInput extends Component {
  constructor(props) {
    super(props);
    this.state = { text: 'Useless Placeholder' };
  }

  render() {
    return (
      <TextInput
        style={{height: 40, borderColor: 'gray', borderWidth: 1}}
        onChangeText={(text) => this.setState({text})}
        value={this.state.text}
      />
    );
  }
}

export default class Zbhrt extends Component {
  render() {
    return (
      <View style={styles.container}>
        <View >
          <Text style={styles.welcome}>
          个人中心
          </Text>

         <Image style={styles.icon}source={require('./image/my.jpg')}/>

        </View>

         <UselessTextInput />

      </View>
    );
  }
}

这个自定义组件TextInput可以正常显示，但是当自己这样写就不能正常显示了，就报错：

export default class Zbhrt extends Component {
  render() {
    return (
      <View style={styles.container}>
        <View >
          <Text style={styles.welcome}>
          个人中心
          </Text>

         <Image style={styles.icon}source={require('./image/my.jpg')}/>

        </View>

         <UselessTextInput />

      </View>
    );
  }
}


class UselessTextInput extends Component {
  constructor(props) {
    super(props);
    this.state = { text: 'Useless Placeholder' };
  }

  render() {
    return (
      <TextInput
        style={{height: 40, borderColor: 'gray', borderWidth: 1}}
        onChangeText={(text) => this.setState({text})}
        value={this.state.text}
      />
    );
  }
}



7.
   fetch('http://ip.taobao.com/service/getIpInfo.php?ip=63.223.108.42', {
method: 'GET'
}) .then((response) => response.json())
      .then((responseText) => {
        // dataSource: this.state.dataSource.cloneWithRows(responseText.results),

        alert(responseText.data.country);
      })
      .catch((error) => {
        console.error(error);
      });
}

返回的数据：{"code":0,"data":{"country":"\u7f8e\u56fd","country_id":"US","area":"","area_id":"","region":"","region_id":"","city":"","city_id":"","county":"","county_id":"","isp":"","isp_id":"","ip":"63.223.108.42"}}
这个和java不一样，直接点属性值就可以拿到我去。

8.之前自己无法运行报错 
could not connect to development server   是因为需要设置Dev Settings  --> Debugging 设置成自己的IP  
React―Native开发之 Could not connect to development server（Android）解决方法   http://blog.csdn.net/qq_25827845/article/details/52974991


9. 自己运行网上的开源项目的报错
 启动npm报错  http://blog.csdn.net/nigel_lee_beihang/article/details/70060988 


10.  react-native-wechat的使用  http://blog.csdn.net/superbiglw/article/details/54571630 把微信引入RN

11. React-Native Primary 第三方库  https://www.zybuluo.com/linux1s1s/note/682634




12.
  Navigator1=()=>{
 
    alert("被点击了")
 
  }

函数必须是上面的格式  =()=> 这个格式不要忘记，还有就是自己在最后添加了;是这样写的: Navigator1=()=>{
 alert("被点击了")
 };然后就是一直报错，说这个不是一个函数。



13. 用浏览器访问packager看下   http://localhost:8081/index.android.bundle?platform=android
   主要看这个过程中packager有没有报错
   排除运行环境和第三方依赖包的问题


14.
 
 import React, {
  AppRegistry,
  Component,
  StyleSheet,
  Text,
  View,
  TouchableHighlight,
} from 'react-native';
var { NativeModules } = require('react-native');
module.exports = NativeModules.ToastCustomAndroid;
class CustomButton extends React.Component {
  render() {
    return (
      <TouchableHighlight
        style={styles.button}
        underlayColor="#a5a5a5"
        onPress={this.props.onPress}>
        <Text style={styles.buttonText}>{this.props.text}</Text>
      </TouchableHighlight>
    );
  }
}
class ModulesDemo extends Component {
  render() {
    return (
      <View>
        <Text style={styles.welcome}>
          自定义弹出Toast消息
        </Text>
        <CustomButton
          text="点击弹出Toast消息"
          onPress={()=>NativeModules.ToastCustomAndroid.show("我是ToastCustomAndroid弹出消息",NativeModules.ToastCustomAndroid.SHORT)}
        />
      </View>
    );
  }
}
const styles = StyleSheet.create({
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
   button: {
    margin:5,
    backgroundColor: 'white',
    padding: 15,
    borderBottomWidth: StyleSheet.hairlineWidth,
    borderBottomColor: '#cdcdcd',
  },
});
 
AppRegistry.registerComponent('ModulesDemo', () => ModulesDemo);


var { NativeModules } = require('react-native');导入这个变量NativeModules


15.自己在使用盒模型的时候，css3里面的是flex-direction，但是RN里面全部使用的是驼峰命名，所以应该写成flexDirection这个地方需要注意。


16.有时候删除文件说不能删除，把原来文件夹关闭重新打开试一试,如果还不行那就重新运行一下项目再试试。

17.对于一些报错，如果屏幕不能提示有效的信息那么可以执行：http://localhost:8081/index.android.bundle?platform=android&dev=true&hot=false&minify=fals
   看看给出什么错误信息。

18.import { getFriendList} from '../../../index'  有一个方法getFriendList()在index.ios和index.android里面都有，然后在其他地方引用，因为他们是写的所以引用的时候写的是：
import { getFriendList} from '../../../index.ios'然后自己为就一直拿不到数据，最后想着用import { getFriendList} from '../../../index'就可以拿到数据了。

19.
  定意全局变量：
 
 react native 怎么定义全局变量
 
// Global.js
var Global = {};
module.exports = Global;

// 调用的页面
let Global = require('./Global');
Global.userToken = 'token';
